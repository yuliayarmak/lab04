sbcl --load quicklisp.lisp


(ql:quickload "cl-csv")


(defparameter *input-table* (cl-csv:read-csv #P"results1.csv"))


(defparameter *cols-to-keep-by-name*
  (car (cl-csv:read-csv #P"columns.csv")))


(defparameter *header-input-table* (car *input-table*))

(defun get-col-position (col-name)
  "Get the position number of a column by the column name."
  (position col-name *header-input-table* :test #'string=))


(defparameter *cols-to-keep-by-position*
  (mapcar #'get-col-position *cols-to-keep-by-name*))


(defun create-output-row (input-row)
  "Filter a row of the input-table to create a row for the output table."
  (loop for x in *cols-to-keep-by-position* 
        collect (nth x input-row)))


(defparameter *output-table*
  (mapcar #'create-output-row *input-table*))


(cl-csv:write-csv *output-table* :stream #P"new.csv")